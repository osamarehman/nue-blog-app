<script>
  import { model } from '../app/model/index.js'
</script>

<div @name="comments-list" class="comments-list">
  <h3>Comments ({ comments.length })</h3>
  
  <div if="isLoading" class="loading">Loading comments...</div>
  
  <div if="!isLoading && comments.length === 0" class="no-comments">
    <p>No comments yet. Be the first to comment!</p>
  </div>
  
  <ul if="!isLoading && comments.length > 0" class="comments">
    <li :for="comment in comments" class="comment">
      <div class="comment-header">
        <img :src="comment.author.avatar || '/img/avatars/default.jpg'" alt="{ comment.author.name }" class="avatar">
        <div class="comment-meta">
          <h4>{ comment.author.name }</h4>
          <time>{ formatDate(comment.createdAt) }</time>
        </div>
      </div>
      <div class="comment-content">
        <p>{ comment.content }</p>
      </div>
      <div if="canDelete(comment)" class="comment-actions">
        <button @click="deleteComment(comment.id)" class="btn-text">Delete</button>
      </div>
    </li>
  </ul>
  
  <comment-form :postId="postId" @comment-added="loadComments"/>

  <script>
    setup() {
      return {
        comments: [],
        isLoading: true
      }
    }
    
    mounted() {
      this.loadComments()
    }
    
    async loadComments() {
      this.isLoading = true
      try {
        this.comments = await model.getComments(this.postId)
      } catch (error) {
        console.error('Error loading comments:', error)
      } finally {
        this.isLoading = false
      }
    }
    
    canDelete(comment) {
      const currentUser = model.currentUser
      if (!currentUser) return false
      
      // Allow comment author or admin to delete
      return currentUser.id === comment.authorId || currentUser.role === 'ADMIN'
    }
    
    async deleteComment(id) {
      if (!confirm('Are you sure you want to delete this comment?')) return
      
      try {
        await model.deleteComment(id)
        this.loadComments()
      } catch (error) {
        console.error('Error deleting comment:', error)
        alert('Failed to delete comment. Please try again.')
      }
    }
    
    formatDate(dateString) {
      const date = new Date(dateString)
      return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })
    }
  </script>
</div>
